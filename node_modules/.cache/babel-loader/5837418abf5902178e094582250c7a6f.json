{"ast":null,"code":"var _jsxFileName = \"/Users/hans.jorgen.ro/Documents/GitHub/memoory/memoory/src/Components/Card/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nexport default function Card({\n  id,\n  sound,\n  isFlipped,\n  name,\n  flipCard\n}) {\n  console.log(\"flipped\", isFlipped);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `card ${isFlipped ? \"flipped\" : \"\"}`,\n    onClick: () => {\n      sound.play();\n\n      if (!isFlipped) {\n        flipCard();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, isFlipped ? name : /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Card faced down\",\n    href: \"/Static/Images/Behind.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 38\n    }\n  })));\n}\nCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  isFlipped: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  flipCard: PropTypes.func.isRequired,\n  sound: PropTypes.any\n};","map":{"version":3,"sources":["/Users/hans.jorgen.ro/Documents/GitHub/memoory/memoory/src/Components/Card/index.jsx"],"names":["React","PropTypes","Card","id","sound","isFlipped","name","flipCard","console","log","play","propTypes","number","isRequired","bool","string","func","any"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,EAAD;AAAKC,EAAAA,KAAL;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA;AAA7B,CAAd,EAAqD;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,SAAvB;AACA,sBACI;AACI,IAAA,SAAS,EAAG,QAAOA,SAAS,GAAG,SAAH,GAAc,EAAG,EADjD;AAEI,IAAA,OAAO,EACH,MAAM;AACFD,MAAAA,KAAK,CAACM,IAAN;;AACA,UAAG,CAACL,SAAJ,EAAc;AACVE,QAAAA,QAAQ;AACX;AACJ,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,GAAEC,IAAF,gBAAW;AAAK,IAAA,GAAG,EAAC,iBAAT;AAA2B,IAAA,IAAI,EAAE,2BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,CAVJ,CADJ;AAgBH;AAEDJ,IAAI,CAACS,SAAL,GAAiB;AACbR,EAAAA,EAAE,EAAGF,SAAS,CAACW,MAAV,CAAiBC,UADT;AAEbR,EAAAA,SAAS,EAAEJ,SAAS,CAACa,IAAV,CAAeD,UAFb;AAGbP,EAAAA,IAAI,EAAEL,SAAS,CAACc,MAAV,CAAiBF,UAHV;AAIbN,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IAAV,CAAeH,UAJZ;AAKbT,EAAAA,KAAK,EAAEH,SAAS,CAACgB;AALJ,CAAjB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nexport default function Card({id, sound, isFlipped, name, flipCard}){\n    console.log(\"flipped\", isFlipped)\n    return(\n        <div \n            className={`card ${isFlipped ? \"flipped\" :\"\"}`}\n            onClick={\n                () => {\n                    sound.play()\n                    if(!isFlipped){\n                        flipCard()\n                    }\n                }}\n        >\n            <div>\n                {isFlipped? name : ( <img alt=\"Card faced down\" href={\"/Static/Images/Behind.jpg\"}/>)}\n            </div>\n        </div>\n    ) \n}\n\nCard.propTypes = {\n    id : PropTypes.number.isRequired,\n    isFlipped: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    flipCard: PropTypes.func.isRequired,\n    sound: PropTypes.any\n}"]},"metadata":{},"sourceType":"module"}