{"ast":null,"code":"var _jsxFileName = \"/Users/hans.jorgen.ro/Documents/GitHub/memoory/memoory/src/Components/Card/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nexport default function Card({\n  id,\n  isFlipped,\n  name,\n  handleClickCard\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `card ${isFlipped ? \"flipped\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, isFlipped ? name : \"ThisIsTheBack\"));\n}\nCard.PropTypes = {\n  id: PropTypes.number.isRequired,\n  isFlipped: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  handleClickCard: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/hans.jorgen.ro/Documents/GitHub/memoory/memoory/src/Components/Card/index.jsx"],"names":["React","PropTypes","Card","id","isFlipped","name","handleClickCard","number","isRequired","bool","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,EAAD;AAAKC,EAAAA,SAAL;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA;AAAtB,CAAd,EAAqD;AAChE,sBACI;AAAK,IAAA,SAAS,EAAG,QAAOF,SAAS,GAAE,SAAF,GAAa,EAAG,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,SAAS,GAAEC,IAAF,GAAS,eADvB,CADJ,CADJ;AAOH;AAEDH,IAAI,CAACD,SAAL,GAAiB;AACbE,EAAAA,EAAE,EAAGF,SAAS,CAACM,MAAV,CAAiBC,UADT;AAEbJ,EAAAA,SAAS,EAAEH,SAAS,CAACQ,IAAV,CAAeD,UAFb;AAGbH,EAAAA,IAAI,EAAEJ,SAAS,CAACS,MAAV,CAAiBF,UAHV;AAIbF,EAAAA,eAAe,EAAEL,SAAS,CAACU,IAAV,CAAeH;AAJnB,CAAjB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nexport default function Card({id, isFlipped, name, handleClickCard}){\n    return(\n        <div className={`card ${isFlipped? \"flipped\" :\"\"}`}>\n            <div>\n                {isFlipped? name : \"ThisIsTheBack\"}\n            </div>\n        </div>\n    )\n}\n\nCard.PropTypes = {\n    id : PropTypes.number.isRequired,\n    isFlipped: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    handleClickCard: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}