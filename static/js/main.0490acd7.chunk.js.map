{"version":3,"sources":["../node_modules/typescript/lib sync","Components/Card/index.jsx","Components/Board/index.jsx","initialData.js","App.js","helpers.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Card","sound","isFlipped","isMatched","name","flipCard","image","type","faceSideUp","className","onClick","play","alt","src","Board","cards","flippedCards","matchedCards","handleClickCard","map","card","key","call","imageRef","includes","Audio","ambience","generateStartingDeck","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","defaultCards","App","useState","setFlippedCard","setMatchedCards","setCards","showGame","setShowGame","timesWon","setTimesWon","checkCardMatch","id1","id2","card1","find","card2","console","log","useEffect","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0490acd7.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 26;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\n\nexport default function Card({id, sound, isFlipped, isMatched, name, flipCard, image, type}){\n    const faceSideUp = isFlipped || isMatched;\n    return(\n        <div \n            className={`flip-card ${faceSideUp ? \"faceUp\" :\"\"}`}\n            onClick={\n                () => {\n                    sound.play()\n                    if(!isFlipped){\n                        flipCard()\n                    }\n                }}\n        >\n            <div \n                className={`flip-card-inner ${faceSideUp ? \"faceUp\" :\"\"}`} >\n                {faceSideUp? \n                    <div className=\"flip-card-front\">\n                        <img \n                            className={\"cardImageFront\"} \n                            alt={\"Card faced up\"} \n                            src={\n                                type==\"image\" || isMatched?\n                                    image:\n                                    \"static/Images/unknown.png\"\n                                }/>\n                        <div className={\"nametag\"}>{ type==\"name\" || isMatched ? name: \"???\"}</div>\n                    </div>\n                    : \n                    <div className=\"flip-card-back\">\n                        <img className={\"cardImage\"} alt={\"Card faced down\"} src={\"static/Images/Behind.jpg\"}/>\n                    </div>\n                 }\n            </div>\n        </div>\n    ) \n}\n\n\n\nCard.propTypes = {\n    id : PropTypes.number.isRequired,\n    isFlipped: PropTypes.bool.isRequired,\n    isMatched: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    flipCard: PropTypes.func.isRequired,\n    sound: PropTypes.any,\n    type: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './styles.css'\nimport Card from '../Card'\n\nexport default function Board({cards, flippedCards, matchedCards, handleClickCard}){\n    return(\n        <div className=\"gameBoard\" >\n            {cards.map(card => (\n                <div className=\"cardSpot\">\n                    <Card\n                        \n                        key={card.id}\n                        sound={card.call}\n                        id={card.id}\n                        name={card.name}\n                        image={card.imageRef}\n                        type={card.type}\n                        isFlipped={flippedCards.includes(card.id)}\n                        isMatched={matchedCards.includes(card.id)}\n                        flipCard={() => handleClickCard(card.id)}\n                        /> \n                </div>\n                ))\n            }\n        </div>\n    )\n}\n\nBoard.propTypes = {\n    cards : PropTypes.array.isRequired,\n    flippedCards: PropTypes.arrayOf(PropTypes.number).isRequired,\n    matchedCards: PropTypes.arrayOf(PropTypes.number).isRequired,\n    handleClickCard: PropTypes.func.isRequired,\n}","export default [\n    {   \n        \"id\": 1,\n        \"name\": \"Bill\",\n        \"call\": new Audio(\"static/Sounds/Cow1.m4a\"),\n        \"imageRef\": \"static/Images/Cow1.jpg\",\n        \"type\":\"name\"\n    },{\n        \"id\": 2,\n        \"name\": \"Dagros\",\n        \"call\": new Audio(\"static/Sounds/Cow2.m4a\"),\n        \"imageRef\": \"static/Images/Cow2.jpg\",\n        \"type\":\"name\"\n    },{\n        \"id\": 3,\n        \"name\": \"Kua\",\n        \"call\": new Audio(\"static/Sounds/Cow3.m4a\"),\n        \"imageRef\": \"static/Images/Cow3.jpg\",\n        \"type\":\"name\"\n    },{\n        \"id\": 4,\n        \"name\": \"Dolly\",\n        \"call\": new Audio(\"static/Sounds/Cow4.m4a\"),\n        \"imageRef\": \"static/Images/Cow4.jpg\",\n        \"type\":\"name\"\n    },{   \n        \"id\": 5,\n        \"name\": \"Bill\",\n        \"call\": new Audio(\"static/Sounds/Cow1.m4a\"),\n        \"imageRef\": \"static/Images/Cow1.jpg\",\n        \"type\":\"image\"\n    },{\n        \"id\": 6,\n        \"name\": \"Dagros\",\n        \"call\": new Audio(\"static/Sounds/Cow2.m4a\"),\n        \"imageRef\": \"static/Images/Cow2.jpg\",\n        \"type\":\"image\"\n    },{\n        \"id\": 7,\n        \"name\": \"Kua\",\n        \"call\": new Audio(\"static/Sounds/Cow3.m4a\"),\n        \"imageRef\": \"static/Images/Cow3.jpg\",\n        \"type\":\"image\"\n    },{\n        \"id\": 8,\n        \"name\": \"Dolly\",\n        \"call\": new Audio(\"static/Sounds/Cow4.m4a\"),\n        \"imageRef\": \"static/Images/Cow4.jpg\",\n        \"type\":\"image\"\n    }\n]","import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport Board from './Components/Board'\nimport {shuffle} from './helpers.js'\n\nimport defaultCards from './initialData'\nimport { addEmitHelpers } from 'typescript';\n\nconst ambience = new Audio(\"static/Sounds/Ambience.mp3\")\n\nconst generateStartingDeck = () => {\n  //Todo generate random cards \n  return  shuffle(defaultCards)\n}\n\nfunction App() {\n  const [ flippedCards, setFlippedCard ] = useState([])\n  const [ matchedCards, setMatchedCards ] = useState([])\n  const [ cards, setCards ] = useState([])\n  const [ showGame, setShowGame] = useState(false)\n  const [ timesWon, setTimesWon] = useState(0)\n\n  const handleClickCard = (id) => {\n    if (flippedCards.length < 2 ){\n      setFlippedCard([...flippedCards, id])\n    }\n  }\n\n  const checkCardMatch = (id1, id2) => {\n    const card1 = cards.find(card => card.id === id1);\n    const card2 = cards.find(card => card.id === id2);\n    console.log(\"matchingCards\", card1, card2, card1.name === card2.name)\n    return card1.name === card2.name;\n  }\n\n  // Main game loop\n  useEffect(() => {\n    console.log(cards)\n    if(flippedCards.length === 2){\n      const flippedCardsMatch = checkCardMatch(flippedCards[0], flippedCards[1])\n      if(flippedCardsMatch){\n        setTimeout(() => {\n          setFlippedCard([])\n          setMatchedCards([...matchedCards , ...flippedCards])\n        }, 500)\n      }else{\n        setTimeout(() => {\n          setFlippedCard([])\n        }, 500)\n      }\n    }\n    if( cards.length > 0 && matchedCards.length === cards.length){\n      setTimeout(() => {\n        setMatchedCards([]);\n        setTimesWon(timesWon + 1)\n        setShowGame(false);\n      }, 1000)\n    }\n\n  }, [matchedCards, flippedCards, cards.length, checkCardMatch, timesWon, setCards]);\n\n  const startGame = () =>{\n    setCards(generateStartingDeck)\n    setShowGame(true)\n    ambience.play()\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>MeMOOry</h1>\n      </header>\n      <div>\n        {showGame?\n          <Board \n            cards={cards}\n            flippedCards={flippedCards}\n            matchedCards={matchedCards}\n            handleClickCard={handleClickCard}\n          />\n        :\n          <div>\n          {timesWon !== 0 && <h2> {`You have now matched all the Moos ${timesWon} time${timesWon > 1 ?'s':''}!`}</h2> }\n          <button onClick={startGame}>Start matching Moos</button>\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// Stolen from https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n//The de-facto unbiased shuffle algorithm is the Fisher-Yates (aka Knuth) Shuffle.\n//See https://github.com/coolaj86/knuth-shuffle\nexport function shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}